{"version":3,"file":"static/js/71.be7d89e3.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Loader/Loader.js","hooks/useToast.js","components/FileUploader/FileUploader.jsx","components/Modal/customModal.jsx","pages/mass-upload/massUpload.jsx","utils/downloadTemplate.js","massuUploadIndex.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import React, { useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\n\r\nconst FileUpload = ({\r\n  fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n  multiple = true,\r\n  onUpload,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleChange = (selectedFiles) => {\r\n    const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n    setFiles(fileArray);\r\n\r\n    // Callback function to send files to parent component\r\n    if (onUpload) {\r\n      onUpload(fileArray);\r\n    }\r\n  };\r\n\r\n  const handleClearFiles = () => {\r\n    setFiles([]);\r\n    if (onUpload) {\r\n      onUpload([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <h2>Drag & Drop Files</h2>\r\n      <div className=\"upload-area\">\r\n        <FileUploader\r\n          multiple={multiple}\r\n          handleChange={handleChange}\r\n          name=\"file\"\r\n          types={fileTypes}\r\n        />\r\n        <div className=\"file-list\">\r\n          {files.length > 0 ? (\r\n            files.map((file, index) => (\r\n              <div\r\n                key={index}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <p style={{ marginRight: \"10px\" }}>📁 {file.name}</p>\r\n                <button\r\n                  onClick={handleClearFiles}\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    cursor: \"pointer\",\r\n                    color: \"red\",\r\n                    marginBottom: \"10px\",\r\n                  }}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No files uploaded yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, { useState } from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Form, Stack, Spinner } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport { downloadTemplate } from \"../../utils/downloadTemplate\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport * as XLSX from \"xlsx\";\r\nimport config from \"./config.json\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst MassUpload = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [errorModalShow, setErrorModalShow] = useState(false);\r\n  const { showErrorToast } = useToast();\r\n  const [isValidating, setIsValidating] = useState(false);\r\n  const [operationChoice, setOperationChoice] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  // Function to validate the uploaded file\r\n  const validateFile = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsBinaryString(file);\r\n\r\n      reader.onload = (e) => {\r\n        const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n\r\n        // 🟢 Extract headers explicitly even if there is no row data\r\n        const headers = XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0];\r\n\r\n        if (!headers || headers.length === 0) {\r\n          reject([\"The uploaded file contains no headers.\"]);\r\n          return;\r\n        }\r\n          // 🔥 Extract actual sheet data (excluding headers)\r\n         const sheetData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\r\n          console.log(\"sheetData\", sheetData);\r\n\r\n        if (sheetData.length === 0) {\r\n          reject([\"The uploaded file contains only headers but no data. Please add at least one row.\"]);\r\n          return;\r\n        }\r\n\r\n        // Extract headers from first row\r\n        const fileHeaders = Object.keys(sheetData[0]);\r\n\r\n        // 🔥 **NEW: Check for duplicate headers**\r\n        const headerCounts = {};\r\n        fileHeaders.forEach((header) => {\r\n          headerCounts[header] = (headerCounts[header] || 0) + 1;\r\n        });\r\n\r\n        const duplicateHeaders = Object.keys(headerCounts).filter(\r\n          (header) => headerCounts[header] > 1\r\n        );\r\n\r\n        if (duplicateHeaders.length > 0) {\r\n          reject([`Duplicate headers found: ${duplicateHeaders.join(\", \")}`]);\r\n          return;\r\n        }\r\n\r\n        // Determine matching operation based on headers\r\n        let matchedOperation = null;\r\n        for (const [key, value] of Object.entries(config.MassUpload)) {\r\n          if (\r\n            value.fileHeaders.every((header) => fileHeaders.includes(header))\r\n          ) {\r\n            matchedOperation = key;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!matchedOperation) {\r\n          reject([\"File headers do not match any expected template.\"]);\r\n          return;\r\n        }\r\n\r\n        const expectedHeaders = config.MassUpload[matchedOperation].fileHeaders;\r\n        const mandatoryAttributes =\r\n          config.MassUpload[matchedOperation].mandatoryAttributes;\r\n\r\n        // Validate missing headers\r\n        const missingHeaders = expectedHeaders.filter(\r\n          (header) => !fileHeaders.includes(header)\r\n        );\r\n        if (missingHeaders.length > 0) {\r\n          reject([`Missing required headers: ${missingHeaders.join(\", \")}`]);\r\n          return;\r\n        }\r\n\r\n        // Validate mandatory fields are not empty\r\n        const validationErrors = [];\r\n        sheetData.forEach((row, index) => {\r\n          mandatoryAttributes.forEach((field) => {\r\n            if (!row[field] || row[field].toString().trim() === \"\") {\r\n              validationErrors.push(\r\n                `Row ${index + 2}: \"${field}\" is required but is empty.`\r\n              );\r\n            }\r\n          });\r\n        });\r\n\r\n        if (validationErrors.length > 0) {\r\n          reject(validationErrors);\r\n        } else {\r\n          resolve();\r\n        }\r\n      };\r\n\r\n      reader.onerror = () => reject([\"File reading failed.\"]);\r\n    });\r\n  };\r\n\r\n  const handleFileUpload = (files) => {\r\n    if (files.length === 0) return;\r\n\r\n    setIsValidating(true);\r\n    validateFile(files[0])\r\n      .then(() => {\r\n        setErrors([]);\r\n        setIsValidating(false);\r\n      })\r\n      .catch((validationErrors) => {\r\n        setErrors(validationErrors);\r\n        setIsValidating(false);\r\n      });\r\n  };\r\n\r\n  const handleDownloadTemplate = () => {\r\n    downloadTemplate(showErrorToast)(operationChoice);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* Choose operation and download template */}\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Select\r\n            aria-label=\"Choose Operations\"\r\n            style={{\r\n              width: \"30%\",\r\n              border: \"1px solid #007bff\",\r\n              outline: \"none\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n            onChange={(e) => setOperationChoice(e.target.value)}\r\n          >\r\n            <option value=\"\">Choose Operations</option>\r\n            <option value=\"1\">Physical Product/Raw Material</option>\r\n            <option value=\"2\">Physical Product Structure</option>\r\n            <option value=\"3\">Document</option>\r\n            <option value=\"4\">Physical Product-Document</option>\r\n          </Form.Select>\r\n          <CustomButton\r\n            variant=\"link ms-auto btn-lg\"\r\n            onClick={handleDownloadTemplate}\r\n            text=\"Download Template\"\r\n          />\r\n        </Stack>\r\n\r\n        {/* Drag and Drop File Upload */}\r\n        <FileUpload\r\n          fileTypes={[\"XLSX\"]}\r\n          multiple={false}\r\n          onUpload={handleFileUpload}\r\n        />\r\n\r\n        {/* Show loader while validating */}\r\n        {isValidating && <Loader />}\r\n\r\n        {/* Show Content Error Link if validation fails */}\r\n        {errors.length > 0 && (\r\n          <CustomButton\r\n            variant=\"danger\"\r\n            text=\"Content Error\"\r\n            onClick={() => setErrorModalShow(true)}\r\n          />\r\n        )}\r\n\r\n        {/* Submit Button */}\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Check type=\"checkbox\" label=\"Background\" />\r\n          <CustomButton\r\n            variant=\"primary ms-auto\"\r\n            onClick={() => setModalShow(true)}\r\n            text=\"Submit\"\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* Validation Errors Modal */}\r\n      <CustomModal\r\n        show={errorModalShow}\r\n        onHide={() => setErrorModalShow(false)}\r\n        title=\"Validation Errors\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Close\",\r\n            variant: \"danger\",\r\n            onClick: () => setErrorModalShow(false),\r\n          },\r\n        ]}\r\n      >\r\n        <ul>\r\n          {errors.map((error, index) => (\r\n            <li key={index}>{error}</li>\r\n          ))}\r\n        </ul>\r\n      </CustomModal>\r\n\r\n      {/* Confirmation Modal */}\r\n      <CustomModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        title=\"Custom Modal Title\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Cancel\",\r\n            variant: \"danger\",\r\n            onClick: () => setModalShow(false),\r\n          },\r\n          {\r\n            label: \"Confirm\",\r\n            variant: \"success\",\r\n            onClick: () => alert(\"Confirmed!\"),\r\n          },\r\n        ]}\r\n      >\r\n        <p>This is a reusable modal component with dynamic content.</p>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import { MSG_DROPDOWN_NOT_SELECTED } from \"./toastMessages\";\r\n\r\nexport const downloadTemplate = (showErrorToast) => (operationChoice) => {\r\n  let url = \"\";\r\n  switch (operationChoice) {\r\n    case \"1\": // Physical Product/Raw Material\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"2\": // Physical Product Structure\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductStructureSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"3\": // Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"4\": // Physical Product-Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProduct-DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    default:\r\n      showErrorToast(MSG_DROPDOWN_NOT_SELECTED);\r\n      return;\r\n  }\r\n  window.open(url, \"_blank\");\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","Loader","useToast","showToast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","toast","showSuccessToast","options","arguments","length","undefined","showErrorToast","showInfoToast","showWarningToast","fileTypes","multiple","onUpload","files","setFiles","useState","handleClearFiles","FileUploader","handleChange","selectedFiles","fileArray","name","types","map","file","index","display","alignItems","background","border","cursor","color","marginBottom","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","btn","label","MassUpload","modalShow","setModalShow","errorModalShow","setErrorModalShow","isValidating","setIsValidating","operationChoice","setOperationChoice","errors","setErrors","_Fragment","Stack","gap","direction","Form","Select","outline","borderRadius","onChange","e","target","value","CustomButton","handleDownloadTemplate","url","MSG_DROPDOWN_NOT_SELECTED","window","open","downloadTemplate","FileUpload","Promise","resolve","reject","reader","FileReader","readAsBinaryString","onload","workbook","XLSX","result","sheetName","SheetNames","worksheet","Sheets","headers","sheet_to_json","header","sheetData","defval","console","log","fileHeaders","Object","keys","headerCounts","forEach","duplicateHeaders","filter","concat","join","matchedOperation","key","entries","config","every","includes","expectedHeaders","mandatoryAttributes","missingHeaders","validationErrors","row","field","toString","trim","push","onerror","then","catch","Check","CustomModal","error","alert","root","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","id","appendChild","ReactDOM","render","Provider","store","ToastContainer","start"],"sourceRoot":""}